package prime

import "math/big"

var (
	// diffs to next relatively prime number mod 210 = 2*3*5*7
	// so gcd(210,diff210[i] + i) = 1
	diffs210 = []int{
		11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 6,
		5, 4, 3, 2, 1, 2, 1, 6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 6, 5,
		4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 2, 1, 6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 2, 1, 6,
		5, 4, 3, 2, 1, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 8, 7, 6, 5, 4, 3, 2, 1, 4, 3,
		2, 1, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 8, 7, 6, 5, 4, 3, 2, 1, 6, 5, 4,
		3, 2, 1, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1,
		2, 1, 6, 5, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 6,
		5, 4, 3, 2, 1, 2, 1, 6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 2, 1,
		10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 2}
	// all primes < 10 bits long
	primes10 = []uint16{
		2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,
		67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137,
		139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211,
		223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283,
		293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,
		383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461,
		463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563,
		569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643,
		647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739,
		743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829,
		839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937,
		941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021}
	// all primes < 10 bits and their product
	prodPrimes10A, _ = new(big.Int).SetString("24776ffd3cbd21c872eccd26ad078c5ba0586e2e57cf68515e3c4828a673a6e", 16)
	prodPrimes10B, _ = new(big.Int).SetString("b4aec292f0e79567889c96d7d7eca2aa680bc5727ba136196bc1c1826d0f8b905b973bbda3a499ec8ef236d53", 16)
	prodPrimes10C, _ = new(big.Int).SetString("6b28164a8d4a8de74906e6ffd83a870d624f94e5bfeede063dfa6dcfcd133f6c12e6eb7788f410ac287a0ecbd2e04111c53", 16)
	prodPrimes10D, _ = new(big.Int).SetString("110ff552b95f8a221746b085d63971478f9c2f463322b634950e79a577287a6cc18a2ee3760e5b73461c471a251fc2804b6923fd57", 16)
	// all squares mod 1155 = 3 * 5 * 7 * 11
	smallSquareMod = big.NewInt(3 * 5 * 7 * 11)
	smallSquares   = map[uint16]bool{
		0:    true,
		1:    true,
		4:    true,
		9:    true,
		15:   true,
		16:   true,
		25:   true,
		36:   true,
		49:   true,
		60:   true,
		64:   true,
		70:   true,
		81:   true,
		91:   true,
		99:   true,
		100:  true,
		114:  true,
		121:  true,
		126:  true,
		130:  true,
		135:  true,
		141:  true,
		144:  true,
		154:  true,
		165:  true,
		169:  true,
		190:  true,
		196:  true,
		210:  true,
		214:  true,
		225:  true,
		231:  true,
		235:  true,
		240:  true,
		246:  true,
		256:  true,
		280:  true,
		289:  true,
		291:  true,
		295:  true,
		301:  true,
		309:  true,
		319:  true,
		324:  true,
		330:  true,
		331:  true,
		345:  true,
		361:  true,
		364:  true,
		366:  true,
		375:  true,
		379:  true,
		385:  true,
		394:  true,
		396:  true,
		399:  true,
		400:  true,
		421:  true,
		429:  true,
		441:  true,
		445:  true,
		456:  true,
		466:  true,
		471:  true,
		484:  true,
		499:  true,
		504:  true,
		511:  true,
		520:  true,
		526:  true,
		529:  true,
		540:  true,
		550:  true,
		555:  true,
		561:  true,
		564:  true,
		576:  true,
		595:  true,
		606:  true,
		609:  true,
		610:  true,
		616:  true,
		625:  true,
		630:  true,
		631:  true,
		639:  true,
		660:  true,
		669:  true,
		676:  true,
		694:  true,
		709:  true,
		715:  true,
		729:  true,
		730:  true,
		735:  true,
		751:  true,
		760:  true,
		771:  true,
		774:  true,
		781:  true,
		784:  true,
		786:  true,
		795:  true,
		814:  true,
		819:  true,
		826:  true,
		834:  true,
		840:  true,
		841:  true,
		856:  true,
		861:  true,
		870:  true,
		889:  true,
		891:  true,
		900:  true,
		924:  true,
		925:  true,
		939:  true,
		940:  true,
		946:  true,
		949:  true,
		960:  true,
		961:  true,
		966:  true,
		984:  true,
		991:  true,
		994:  true,
		1005: true,
		1015: true,
		1024: true,
		1026: true,
		1045: true,
		1050: true,
		1054: true,
		1059: true,
		1065: true,
		1071: true,
		1089: true,
		1101: true,
		1114: true,
		1120: true,
		1131: true,
		1134: true,
		1149: true,
	}
	squaresMod128 = map[uint8]bool{
		0:   true,
		1:   true,
		4:   true,
		9:   true,
		16:  true,
		17:  true,
		25:  true,
		33:  true,
		36:  true,
		41:  true,
		49:  true,
		57:  true,
		64:  true,
		65:  true,
		68:  true,
		73:  true,
		81:  true,
		89:  true,
		97:  true,
		100: true,
		105: true,
		113: true,
		121: true,
		129: true,
		132: true,
		137: true,
		144: true,
		145: true,
		153: true,
		161: true,
		164: true,
		169: true,
		177: true,
		185: true,
		193: true,
		196: true,
		201: true,
		209: true,
		217: true,
		225: true,
		228: true,
		233: true,
		241: true,
		249: true,
	}
)
